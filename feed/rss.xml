<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>PureCore.ro</title>
        <link>https://purecore.ro/</link>
        <description>Static Blog Generator based on npm, marked and jsdom</description>
        <lastBuildDate>Sat, 26 Feb 2022 13:09:53 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Markedista</generator>
        <image>
            <title>PureCore.ro</title>
            <url>https://purecore.ro/images/logo/purecore-logotype.png</url>
            <link>https://purecore.ro/</link>
        </image>
        <copyright>2022, Valentin Padurean</copyright>
        <category>Tech</category>
        <category>Static Blog Generator</category>
        <category>Markdown</category>
        <atom:link href="https://purecore.ro/feed/rss.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[COVID-19 pandemic: Visual data explorer using Python and Streamlit]]></title>
            <link>https://purecore.ro/posts/2021-12-31-covid-pandemic-streamlit-visual-data-explorer/</link>
            <guid>https://purecore.ro/posts/2021-12-31-covid-pandemic-streamlit-visual-data-explorer/</guid>
            <pubDate>Fri, 31 Dec 2021 14:33:55 GMT</pubDate>
            <description><![CDATA[Visually explore COVID-19 pandemic data in browser using Python, Pandas, Altair and Streamlit]]></description>
            <content:encoded><![CDATA[Visually explore COVID-19 pandemic data in browser using Python, Pandas, Altair and Streamlit]]></content:encoded>
            <author>padureanvalentin@yahoo.com (Valentin Padurean)</author>
            <media:thumbnail url="https://purecore.ro/images/streamlit-mark-color.png">
            </media:thumbnail>
            <media:title type="plain">COVID-19 pandemic: Visual data explorer using Python and Streamlit</media:title>
            <media:description type="plain">Visually explore COVID-19 pandemic data in browser using Python, Pandas, Altair and Streamlit</media:description>
            <media:rating>nonadult</media:rating>
        </item>
        <item>
            <title><![CDATA[Display tables in the CLI using just the Go standard library]]></title>
            <link>https://purecore.ro/posts/2020-08-12-display-tables-in-CLI-using-Go-standard-library/</link>
            <guid>https://purecore.ro/posts/2020-08-12-display-tables-in-CLI-using-Go-standard-library/</guid>
            <pubDate>Wed, 12 Aug 2020 16:52:15 GMT</pubDate>
            <description><![CDATA[Print data as minimalist plain-text tables using just the text/tabwriter package, without any third-party library]]></description>
            <content:encoded><![CDATA[Print data as minimalist plain-text tables using just the text/tabwriter package, without any third-party library]]></content:encoded>
            <author>padureanvalentin@yahoo.com (Valentin Padurean)</author>
            <media:thumbnail url="https://purecore.ro/images/gopher-side_color-head-only.png">
            </media:thumbnail>
            <media:title type="plain">Display tables in the CLI using just the Go standard library</media:title>
            <media:description type="plain">Print data as minimalist plain-text tables using just the text/tabwriter package, without any third-party library</media:description>
            <media:rating>nonadult</media:rating>
        </item>
        <item>
            <title><![CDATA[Interface implementations with injectable definitions in Go]]></title>
            <link>https://purecore.ro/posts/2020-07-28-interface-implementations-with-injectable-definitions-in-go/</link>
            <guid>https://purecore.ro/posts/2020-07-28-interface-implementations-with-injectable-definitions-in-go/</guid>
            <pubDate>Tue, 28 Jul 2020 12:00:34 GMT</pubDate>
            <description><![CDATA[Make use of Go's structural typing and support for first-class functions to mock dependencies in unit tests with custom behaviour injectable when needed only for what is needed, without writing an entire mock implementation]]></description>
            <content:encoded><![CDATA[Make use of Go's structural typing and support for first-class functions to mock dependencies in unit tests with custom behaviour injectable when needed only for what is needed, without writing an entire mock implementation]]></content:encoded>
            <author>padureanvalentin@yahoo.com (Valentin Padurean)</author>
            <media:thumbnail url="https://purecore.ro/images/gopher-purecore.svg">
            </media:thumbnail>
            <media:title type="plain">Interface implementations with injectable definitions in Go</media:title>
            <media:description type="plain">Make use of Go&apos;s structural typing and support for first-class functions to mock dependencies in unit tests with custom behaviour injectable when needed only for what is needed, without writing an entire mock implementation</media:description>
            <media:rating>nonadult</media:rating>
        </item>
    </channel>
</rss>