[{"title":"GoSMig: a tiny, type-safe way to build your own SQL database migration CLI in Go","date":"2025-10-23T23:07:19+03:00","description":"Write SQL database migrations in Go with strong typing, zero non-stdlib dependencies, and build your own migration CLI with minimal boilerplate. database/sql and sqlx supported out of the box.","tags":["Go","CLI","database","SQL","migrations"],"name":"2025-10-23-gosmig-sql-database-migrations-written-in-go","thumbnail":"","thumbnailUrl":"","cover":"https://raw.githubusercontent.com/padurean/gosmig/e52c9cc1e4a04ee418aef7936966c06e621ee265/graphics/gosmig-banner.png","coverUrl":"https://raw.githubusercontent.com/padurean/gosmig/e52c9cc1e4a04ee418aef7936966c06e621ee265/graphics/gosmig-banner.png"},{"title":"COVID-19 pandemic: Visual data explorer using Python and Streamlit","date":"2021-12-31T16:33:55+02:00","description":"Visually explore COVID-19 pandemic data in browser using Python, Pandas, Altair and Streamlit","tags":["Python","Streamlit"],"name":"2021-12-31-covid-pandemic-streamlit-visual-data-explorer","thumbnail":"images/streamlit-mark-color.png","thumbnailUrl":"https://purecore.ro/images/streamlit-mark-color.png","cover":"images/posts/2021-12-31-covid-pandemic-streamlit-visual-data-explorer/cover.png","coverUrl":"https://purecore.ro/images/posts/2021-12-31-covid-pandemic-streamlit-visual-data-explorer/cover.png"},{"title":"Display tables in the CLI using just the Go standard library","date":"2020-08-12T19:52:15+03:00","description":"Print data as minimalist plain-text tables using just the text/tabwriter package, without any third-party library","tags":["Go","CLI"],"name":"2020-08-12-display-tables-in-CLI-using-Go-standard-library","thumbnail":"images/gopher-side_color-head-only.png","thumbnailUrl":"https://purecore.ro/images/gopher-side_color-head-only.png","cover":"images/posts/2020-08-12-display-tables-in-CLI-using-Go-standard-library/cover.png","coverUrl":"https://purecore.ro/images/posts/2020-08-12-display-tables-in-CLI-using-Go-standard-library/cover.png"},{"title":"Interface implementations with injectable definitions in Go","date":"2020-07-28T15:00:34+03:00","description":"Make use of Go's structural typing and support for first-class functions to mock dependencies in unit tests with custom behaviour injectable when needed only for what is needed, without writing an entire mock implementation","tags":["Go"],"name":"2020-07-28-interface-implementations-with-injectable-definitions-in-go","thumbnail":"images/gopher-purecore.svg","thumbnailUrl":"https://purecore.ro/images/gopher-purecore.svg","cover":"images/posts/2020-07-28-interface-implementations-with-injectable-definitions-in-go/cover.svg","coverUrl":"https://purecore.ro/images/posts/2020-07-28-interface-implementations-with-injectable-definitions-in-go/cover.svg"}]